version: '3.9'
services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: contacts_db
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: 
      context: .
      dockerfile: Dockerfile
    # Переопределяем ENTRYPOINT и CMD для контейнера
    entrypoint: []
    command: >
      bash -c "
        echo 'Waiting for PostgreSQL to be ready...'
        until pg_isready -h db -p 5432 -U postgres; do
          echo 'PostgreSQL is unavailable - sleeping'
          sleep 2
        done
        echo 'PostgreSQL is ready!'
        
        if [ -n \"$$REDIS_URL\" ]; then
          echo 'Checking Redis availability...'
          if command -v redis-cli > /dev/null; then
            until redis-cli -h redis -p 6379 ping | grep -q PONG; do
              echo 'Redis is unavailable - sleeping'
              sleep 2
            done
            echo 'Redis is ready!'
          fi
        fi
        
        echo 'Starting FastAPI application...'
        uvicorn main:app --host 0.0.0.0 --port 8000
      "
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/contacts_db
      REDIS_URL: redis://redis:6379/0
      DOCKER_ENV: "true"
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: contacts_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      SECRET_KEY: "your_development_secret_key_change_in_production"
      ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_MINUTES: "30"
    volumes:
      - .:/app

volumes:
  pgdata:
  redis_data:
